[testenv:bootstrap]
deps =
    jinja2
    matrix
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *
; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    {py38,py39,py310},
    report
ignore_basepython_conflict = true

# Define the minimal tox version required to run;
# if the host tox is less than this the tool with create an environment and
# provision it with a tox that satisfies it under provision_tox_env.
# At least this version is needed for PEP 517/518 support.
minversion = 3.3.0

# Activate isolated build environment. tox will use a virtual environment
# to build a source distribution from the source tree. For build tools and
# arguments use the pyproject.toml file as specified in PEP-517 and PEP-518.
isolated_build = true

[testenv]
basepython =
    py38: {env:TOXPYTHON:python3.8}
    py39: {env:TOXPYTHON:python3.9}
    py310: {env:TOXPYTHON:python3.10}
    {bootstrap,clean,check,docs,spell,report,codecov}: {env:TOXPYTHON:python3.10}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    DISPLAY = :0
    MPLBACKEND = agg
passenv =
    *
usedevelop = True
deps =
    pytest
    numpy
    netcdf4
    pandas
    xarray
    xmltodict
    pyyaml>=5.1
    scipy
    matplotlib>3
    sh
    dtscalibration

commands =
    {posargs:pytest -v}

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
skip_install = true
commands =
# The first command is for checking a readme in a restructuredtext format.
#    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests setup.py

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    codecov []

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

[flake8]
exclude = .tox,*.egg,build,data
select = E,W,F
ignore = E113,E116,E221,E226,E241,E251,E901,W503,F401,E741,F401,E203,F481
